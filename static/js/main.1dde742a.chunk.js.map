{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["ep1_full_body","ep2_6pack_abs","ep3_glutes_workout","ep4_upper_body_workout","ep5_legs_workout","plank_workout","hip_dips","days","date","moment","workouts","add","App","remainingDays","filter","day","startOf","isBefore","nextDay","_","minBy","className","format","map","workout","videoId","opts","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAQMA,G,MAAgB,eAChBC,EAAgB,cAChBC,EAAqB,cACrBC,EAAyB,cACzBC,EAAmB,cACnBC,EAAgB,cAChBC,EAAW,cAEXC,EAAc,CAClB,CACEC,KAAMC,IAAO,cACbC,SAAU,CACRV,EACAC,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,EAAG,QACVD,SAAU,CACRR,EACAA,IAGJ,CACEM,KAAMC,IAAO,cACVE,IAAI,EAAG,QACVD,SAAU,CACRV,EACAG,EACAF,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,EAAG,QACVD,SAAU,CACRP,EACAA,EACAF,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,EAAG,QACPA,IAAI,EAAG,QACVD,SAAU,CACRN,EACAF,IAGJ,CACEM,KAAMC,IAAO,cACVE,IAAI,EAAG,QACPA,IAAI,EAAG,QACVD,SAAU,CACRP,EACAE,EACAJ,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,GAAI,QACXD,SAAU,CACRN,EACAF,EACAI,IAGJ,CACEE,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRT,EACAE,EACAA,IAGJ,CACEK,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRV,IAGJ,CACEQ,KAAMC,IAAO,cACVE,IAAI,GAAI,QACXD,SAAU,CACRN,EACAF,EACAD,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRP,EACAA,EACAE,IAGJ,CACEG,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRV,EACAC,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,GAAI,QACXD,SAAU,CACRN,EACAF,EACAI,EACAL,IAGJ,CACEO,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRP,EACAA,IAGJ,CACEK,KAAMC,IAAO,cACVE,IAAI,GAAI,QACRA,IAAI,EAAG,QACVD,SAAU,CACRV,EACAI,EACAH,KA2BSW,MAtBf,WACE,IAAMC,EAAgBN,EAAKO,QAAO,SAAAC,GAAG,OAAKA,EAAIP,KAAKQ,QAAQ,OAAOC,SAASR,MAASO,QAAQ,WACtFE,EAAUC,IAAEC,MAAMP,GAAe,SAAAE,GAAG,OAAIA,EAAIP,QAElD,OACE,sBAAKa,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACGH,GAAW,6BAAKA,EAAQV,KAAKc,OAAO,oBAGzC,qBAAKD,UAAU,MAAf,gBACKH,QADL,IACKA,OADL,EACKA,EAASR,SAASa,KAAI,SAAAC,GAAO,OAC1B,qBAAKH,UAAU,SAAf,SACI,cAAC,IAAD,CAASI,QAASD,EAASE,KAAM,CAAEC,MAAM,qBC3J9CC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1dde742a.chunk.js","sourcesContent":["import './App.css';\nimport { Day } from './models/day';\nimport YouTube from \"react-youtube\";\nimport moment, { Moment } from \"moment\";\nimport _ from \"lodash\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ep1_full_body = \"ixKRye1PqXU\";\nconst ep2_6pack_abs = \"SX6Vhj9wZh8\";\nconst ep3_glutes_workout = \"hpoj6MA_KVE\";\nconst ep4_upper_body_workout = \"puLJaNv9m18\"\nconst ep5_legs_workout = \"9zhV-MKrSGc\";\nconst plank_workout = \"7EHGO-alrwI\";\nconst hip_dips = \"umUtH9gZIfc\";\n\nconst days: Day[] = [\n  {\n    date: moment(\"2021-02-02\"),\n    workouts: [\n      ep1_full_body,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(2, \"days\"),\n    workouts: [ \n      ep3_glutes_workout,\n      ep3_glutes_workout\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(4, \"days\"),\n    workouts: [\n      ep1_full_body,\n      ep4_upper_body_workout,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(7, \"days\"),\n    workouts: [\n      ep4_upper_body_workout,\n      ep4_upper_body_workout,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(7, \"days\")\n      .add(2, \"days\"),\n    workouts: [\n      ep5_legs_workout,\n      ep3_glutes_workout\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(7, \"days\")\n      .add(4, \"days\"),\n    workouts: [\n      ep4_upper_body_workout,\n      plank_workout,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(14, \"days\"),\n    workouts: [\n      ep5_legs_workout,\n      ep3_glutes_workout,\n      hip_dips\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(14, \"days\")\n      .add(2, \"days\"),\n    workouts: [\n      ep2_6pack_abs,\n      ep4_upper_body_workout,\n      ep4_upper_body_workout\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(14, \"days\")\n      .add(4, \"days\"),\n    workouts: [\n      ep1_full_body,\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(21, \"days\"),\n    workouts: [\n      ep5_legs_workout,\n      ep3_glutes_workout,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(21, \"days\")\n      .add(2, \"days\"),\n    workouts: [\n      ep4_upper_body_workout,\n      ep4_upper_body_workout,\n      plank_workout\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(21, \"days\")\n      .add(4, \"days\"),\n    workouts: [\n      ep1_full_body,\n      ep2_6pack_abs,\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(28, \"days\"),\n    workouts: [\n      ep5_legs_workout,\n      ep3_glutes_workout,\n      hip_dips,\n      ep2_6pack_abs\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(28, \"days\")\n      .add(2, \"days\"),\n    workouts: [\n      ep4_upper_body_workout,\n      ep4_upper_body_workout\n    ]\n  },\n  {\n    date: moment(\"2021-02-02\")\n      .add(28, \"days\")\n      .add(4, \"days\"),\n    workouts: [\n      ep1_full_body,\n      ep5_legs_workout,\n      ep2_6pack_abs\n    ]\n  },\n]\n\nfunction App() {\n  const remainingDays = days.filter(day => !day.date.startOf(\"day\").isBefore(moment().startOf(\"day\")))\n  const nextDay = _.minBy(remainingDays, day => day.date)\n\n  return (\n    <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md\">\n            {nextDay && <h2>{nextDay.date.format(\"DD-MM-yyyy\")}</h2>}\n          </div>\n        </div>\n        <div className=\"row\">\n            {nextDay?.workouts.map(workout => (\n                <div className=\"col-md\">\n                    <YouTube videoId={workout} opts={{ width:\"100%\" }} />\n                </div>\n            ))}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}